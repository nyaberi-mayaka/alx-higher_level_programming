>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul(([1, 2], [3, 4]), [[1, 2], [3, 4]])
Traceback (most recent call last):
	  ...
TypeError: m_a must be a list

>>> matrix_mul([[1, 2], [3, 4]], ([1, 2], [3, 4]))
Traceback (most recent call last):
	  ...
TypeError: m_b must be a list

>>> matrix_mul([(1, 2), [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	  ...
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], [(1, 2), [3, 4]])
Traceback (most recent call last):
	  ...
TypeError: m_b must be a list of lists

>>> matrix_mul([[], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	  ...
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [[], [3, 4]])
Traceback (most recent call last):
	  ...
ValueError: m_b can't be empty

>>> matrix_mul()
Traceback (most recent call last):
	  ...
ValueError: m_a can't be empty

>>> matrix_mul([])
Traceback (most recent call last):
	  ...
ValueError: m_a can't be empty

>>> matrix_mul([['2'], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	  ...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], ['3']])
Traceback (most recent call last):
	  ...
TypeError: m_b should contain only integers or floats


>>> matrix_mul([[1], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	  ...
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 4], [3, 4]], [[1, 2], [4]])
Traceback (most recent call last):
	  ...
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 4], [3, 4]], [[1, 2], [4, 3], [1, 4]])
Traceback (most recent call last):
	  ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[float('inf'), 2], [3, 4]], [[1, 2], [3, 4]])
[[6, 8], [15, 22]]

>>> matrix_mul([[float('nan'), 2], [3, 4]], [[1, 2], [3, 4]])
[[6, 8], [15, 22]]

>>> matrix_mul([[1.5, 2.5], [3.5, 4.76]], [[1.5, 2.0], [3.5, 4.5]])
[[11.0, 14.25], [21.91, 28.419999999999998]]
